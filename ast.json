{
    "elem_type": "program",
    "structs": [
        {
            "elem_type": "struct",
            "name": "cat",
            "fields": [
                {
                    "elem_type": "fielddef",
                    "name": "name",
                    "var_type": "string"
                },
                {
                    "elem_type": "fielddef",
                    "name": "scratches",
                    "var_type": "bool"
                },
                {
                    "elem_type": "fielddef",
                    "name": "another",
                    "var_type": "cat"
                }
            ]
        },
        {
            "elem_type": "struct",
            "name": "person",
            "fields": [
                {
                    "elem_type": "fielddef",
                    "name": "name",
                    "var_type": "string"
                },
                {
                    "elem_type": "fielddef",
                    "name": "age",
                    "var_type": "int"
                },
                {
                    "elem_type": "fielddef",
                    "name": "address",
                    "var_type": "string"
                },
                {
                    "elem_type": "fielddef",
                    "name": "kitty",
                    "var_type": "cat"
                }
            ]
        },
        {
            "elem_type": "struct",
            "name": "list",
            "fields": [
                {
                    "elem_type": "fielddef",
                    "name": "val",
                    "var_type": "int"
                },
                {
                    "elem_type": "fielddef",
                    "name": "next",
                    "var_type": "list"
                }
            ]
        }
    ],
    "functions": [
        {
            "elem_type": "func",
            "name": "cons",
            "args": [
                {
                    "elem_type": "arg",
                    "name": "val",
                    "var_type": "int"
                },
                {
                    "elem_type": "arg",
                    "name": "l",
                    "var_type": "list"
                }
            ],
            "return_type": "list",
            "statements": [
                {
                    "elem_type": "vardef",
                    "name": "h",
                    "var_type": "list"
                },
                {
                    "elem_type": "=",
                    "name": "h",
                    "expression": {
                        "elem_type": "new",
                        "var_type": "list"
                    }
                },
                {
                    "elem_type": "=",
                    "name": "h.val",
                    "expression": {
                        "elem_type": "var",
                        "name": "val"
                    }
                },
                {
                    "elem_type": "=",
                    "name": "h.next",
                    "expression": {
                        "elem_type": "var",
                        "name": "l"
                    }
                },
                {
                    "elem_type": "return",
                    "expression": {
                        "elem_type": "var",
                        "name": "h"
                    }
                }
            ]
        },
        {
            "elem_type": "func",
            "name": "rev_app",
            "args": [
                {
                    "elem_type": "arg",
                    "name": "l",
                    "var_type": "list"
                },
                {
                    "elem_type": "arg",
                    "name": "a",
                    "var_type": "list"
                }
            ],
            "return_type": "list",
            "statements": [
                {
                    "elem_type": "if",
                    "condition": {
                        "elem_type": "==",
                        "op1": {
                            "elem_type": "var",
                            "name": "l"
                        },
                        "op2": {
                            "elem_type": "nil"
                        }
                    },
                    "statements": [
                        {
                            "elem_type": "return",
                            "expression": {
                                "elem_type": "var",
                                "name": "a"
                            }
                        }
                    ],
                    "else_statements": "None"
                },
                {
                    "elem_type": "return",
                    "expression": {
                        "elem_type": "fcall",
                        "name": "rev_app",
                        "args": [
                            {
                                "elem_type": "var",
                                "name": "l.next"
                            },
                            {
                                "elem_type": "fcall",
                                "name": "cons",
                                "args": [
                                    {
                                        "elem_type": "var",
                                        "name": "l.val"
                                    },
                                    {
                                        "elem_type": "var",
                                        "name": "a"
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "elem_type": "func",
            "name": "reverse",
            "args": [
                {
                    "elem_type": "arg",
                    "name": "l",
                    "var_type": "list"
                }
            ],
            "return_type": "list",
            "statements": [
                {
                    "elem_type": "vardef",
                    "name": "a",
                    "var_type": "list"
                },
                {
                    "elem_type": "return",
                    "expression": {
                        "elem_type": "fcall",
                        "name": "rev_app",
                        "args": [
                            {
                                "elem_type": "var",
                                "name": "l"
                            },
                            {
                                "elem_type": "var",
                                "name": "a"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "elem_type": "func",
            "name": "print_list",
            "args": [
                {
                    "elem_type": "arg",
                    "name": "l",
                    "var_type": "list"
                }
            ],
            "return_type": "void",
            "statements": [
                {
                    "elem_type": "vardef",
                    "name": "x",
                    "var_type": "list"
                },
                {
                    "elem_type": "vardef",
                    "name": "n",
                    "var_type": "int"
                },
                {
                    "elem_type": "for",
                    "init": {
                        "elem_type": "=",
                        "name": "x",
                        "expression": {
                            "elem_type": "var",
                            "name": "l"
                        }
                    },
                    "condition": {
                        "elem_type": "!=",
                        "op1": {
                            "elem_type": "var",
                            "name": "x"
                        },
                        "op2": {
                            "elem_type": "nil"
                        }
                    },
                    "update": {
                        "elem_type": "=",
                        "name": "x",
                        "expression": {
                            "elem_type": "var",
                            "name": "x.next"
                        }
                    },
                    "statements": [
                        {
                            "elem_type": "fcall",
                            "name": "print",
                            "args": [
                                {
                                    "elem_type": "var",
                                    "name": "x.val"
                                }
                            ]
                        },
                        {
                            "elem_type": "=",
                            "name": "n",
                            "expression": {
                                "elem_type": "+",
                                "op1": {
                                    "elem_type": "var",
                                    "name": "n"
                                },
                                "op2": {
                                    "elem_type": "int",
                                    "val": "1"
                                }
                            }
                        }
                    ]
                },
                {
                    "elem_type": "fcall",
                    "name": "print",
                    "args": [
                        {
                            "elem_type": "string",
                            "val": "N="
                        },
                        {
                            "elem_type": "var",
                            "name": "n"
                        }
                    ]
                }
            ]
        },
        {
            "elem_type": "func",
            "name": "climbStairs",
            "args": [
                {
                    "elem_type": "arg",
                    "name": "n",
                    "var_type": "int"
                }
            ],
            "return_type": "int",
            "statements": [
                {
                    "elem_type": "if",
                    "condition": {
                        "elem_type": "<=",
                        "op1": {
                            "elem_type": "var",
                            "name": "n"
                        },
                        "op2": {
                            "elem_type": "int",
                            "val": "1"
                        }
                    },
                    "statements": [
                        {
                            "elem_type": "return",
                            "expression": {
                                "elem_type": "int",
                                "val": "1"
                            }
                        }
                    ],
                    "else_statements": [
                        {
                            "elem_type": "return",
                            "expression": {
                                "elem_type": "+",
                                "op1": {
                                    "elem_type": "fcall",
                                    "name": "climbStairs",
                                    "args": [
                                        {
                                            "elem_type": "-",
                                            "op1": {
                                                "elem_type": "var",
                                                "name": "n"
                                            },
                                            "op2": {
                                                "elem_type": "int",
                                                "val": "1"
                                            }
                                        }
                                    ]
                                },
                                "op2": {
                                    "elem_type": "fcall",
                                    "name": "climbStairs",
                                    "args": [
                                        {
                                            "elem_type": "-",
                                            "op1": {
                                                "elem_type": "var",
                                                "name": "n"
                                            },
                                            "op2": {
                                                "elem_type": "int",
                                                "val": "2"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            ]
        },
        {
            "elem_type": "func",
            "name": "foo",
            "args": [],
            "return_type": "void",
            "statements": [
                {
                    "elem_type": "fcall",
                    "name": "print",
                    "args": [
                        {
                            "elem_type": "||",
                            "op1": {
                                "elem_type": "bool",
                                "val": "True"
                            },
                            "op2": {
                                "elem_type": "bool",
                                "val": "False"
                            }
                        }
                    ]
                },
                {
                    "elem_type": "fcall",
                    "name": "print",
                    "args": [
                        {
                            "elem_type": "||",
                            "op1": {
                                "elem_type": "==",
                                "op1": {
                                    "elem_type": "bool",
                                    "val": "True"
                                },
                                "op2": {
                                    "elem_type": "bool",
                                    "val": "False"
                                }
                            },
                            "op2": {
                                "elem_type": "bool",
                                "val": "True"
                            }
                        }
                    ]
                },
                {
                    "elem_type": "fcall",
                    "name": "print",
                    "args": [
                        {
                            "elem_type": "/",
                            "op1": {
                                "elem_type": "int",
                                "val": "5"
                            },
                            "op2": {
                                "elem_type": "int",
                                "val": "3"
                            }
                        }
                    ]
                },
                {
                    "elem_type": "fcall",
                    "name": "print",
                    "args": [
                        {
                            "elem_type": "neg",
                            "op1": {
                                "elem_type": "int",
                                "val": "6"
                            }
                        }
                    ]
                },
                {
                    "elem_type": "fcall",
                    "name": "print",
                    "args": [
                        {
                            "elem_type": "!",
                            "op1": {
                                "elem_type": "bool",
                                "val": "True"
                            }
                        }
                    ]
                },
                {
                    "elem_type": "vardef",
                    "name": "a",
                    "var_type": "int"
                },
                {
                    "elem_type": "=",
                    "name": "a",
                    "expression": {
                        "elem_type": "int",
                        "val": "3"
                    }
                },
                {
                    "elem_type": "vardef",
                    "name": "b",
                    "var_type": "int"
                },
                {
                    "elem_type": "=",
                    "name": "b",
                    "expression": {
                        "elem_type": "int",
                        "val": "3"
                    }
                },
                {
                    "elem_type": "fcall",
                    "name": "print",
                    "args": [
                        {
                            "elem_type": ">",
                            "op1": {
                                "elem_type": "var",
                                "name": "a"
                            },
                            "op2": {
                                "elem_type": "var",
                                "name": "b"
                            }
                        }
                    ]
                },
                {
                    "elem_type": "fcall",
                    "name": "print",
                    "args": [
                        {
                            "elem_type": "+",
                            "op1": {
                                "elem_type": "string",
                                "val": "abc"
                            },
                            "op2": {
                                "elem_type": "string",
                                "val": "def"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "elem_type": "func",
            "name": "bar",
            "args": [
                {
                    "elem_type": "arg",
                    "name": "a",
                    "var_type": "int"
                }
            ],
            "return_type": "void",
            "statements": [
                {
                    "elem_type": "if",
                    "condition": {
                        "elem_type": "==",
                        "op1": {
                            "elem_type": "var",
                            "name": "a"
                        },
                        "op2": {
                            "elem_type": "bool",
                            "val": "True"
                        }
                    },
                    "statements": [
                        {
                            "elem_type": "fcall",
                            "name": "print",
                            "args": [
                                {
                                    "elem_type": "string",
                                    "val": "bbb"
                                }
                            ]
                        }
                    ],
                    "else_statements": [
                        {
                            "elem_type": "if",
                            "condition": {
                                "elem_type": "==",
                                "op1": {
                                    "elem_type": "var",
                                    "name": "a"
                                },
                                "op2": {
                                    "elem_type": "int",
                                    "val": "4"
                                }
                            },
                            "statements": [
                                {
                                    "elem_type": "fcall",
                                    "name": "print",
                                    "args": [
                                        {
                                            "elem_type": "string",
                                            "val": "444"
                                        }
                                    ]
                                }
                            ],
                            "else_statements": [
                                {
                                    "elem_type": "if",
                                    "condition": {
                                        "elem_type": "var",
                                        "name": "a"
                                    },
                                    "statements": [
                                        {
                                            "elem_type": "fcall",
                                            "name": "print",
                                            "args": [
                                                {
                                                    "elem_type": "string",
                                                    "val": "blah"
                                                }
                                            ]
                                        }
                                    ],
                                    "else_statements": "None"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "elem_type": "func",
            "name": "main",
            "args": [],
            "return_type": "void",
            "statements": [
                {
                    "elem_type": "if",
                    "condition": {
                        "elem_type": "int",
                        "val": "0"
                    },
                    "statements": [
                        {
                            "elem_type": "fcall",
                            "name": "print",
                            "args": [
                                {
                                    "elem_type": "string",
                                    "val": "damn"
                                }
                            ]
                        }
                    ],
                    "else_statements": "None"
                },
                {
                    "elem_type": "vardef",
                    "name": "n",
                    "var_type": "int"
                },
                {
                    "elem_type": "vardef",
                    "name": "yoda",
                    "var_type": "cat"
                },
                {
                    "elem_type": "if",
                    "condition": {
                        "elem_type": "==",
                        "op1": {
                            "elem_type": "var",
                            "name": "yoda"
                        },
                        "op2": {
                            "elem_type": "nil"
                        }
                    },
                    "statements": [
                        {
                            "elem_type": "fcall",
                            "name": "print",
                            "args": [
                                {
                                    "elem_type": "string",
                                    "val": "fuckkkk"
                                }
                            ]
                        }
                    ],
                    "else_statements": "None"
                },
                {
                    "elem_type": "=",
                    "name": "yoda",
                    "expression": {
                        "elem_type": "new",
                        "var_type": "cat"
                    }
                },
                {
                    "elem_type": "=",
                    "name": "yoda.name",
                    "expression": {
                        "elem_type": "string",
                        "val": "yoda"
                    }
                },
                {
                    "elem_type": "=",
                    "name": "yoda.another",
                    "expression": {
                        "elem_type": "new",
                        "var_type": "cat"
                    }
                },
                {
                    "elem_type": "=",
                    "name": "yoda.another.name",
                    "expression": {
                        "elem_type": "string",
                        "val": "yodaaa"
                    }
                },
                {
                    "elem_type": "vardef",
                    "name": "dayo",
                    "var_type": "cat"
                },
                {
                    "elem_type": "=",
                    "name": "dayo",
                    "expression": {
                        "elem_type": "var",
                        "name": "yoda"
                    }
                },
                {
                    "elem_type": "fcall",
                    "name": "print",
                    "args": [
                        {
                            "elem_type": "var",
                            "name": "yoda.name"
                        }
                    ]
                },
                {
                    "elem_type": "fcall",
                    "name": "print",
                    "args": [
                        {
                            "elem_type": "var",
                            "name": "dayo.name"
                        }
                    ]
                },
                {
                    "elem_type": "fcall",
                    "name": "print",
                    "args": [
                        {
                            "elem_type": "==",
                            "op1": {
                                "elem_type": "var",
                                "name": "dayo"
                            },
                            "op2": {
                                "elem_type": "var",
                                "name": "yoda"
                            }
                        }
                    ]
                },
                {
                    "elem_type": "fcall",
                    "name": "print",
                    "args": [
                        {
                            "elem_type": "var",
                            "name": "yoda.another.name"
                        }
                    ]
                },
                {
                    "elem_type": "=",
                    "name": "n",
                    "expression": {
                        "elem_type": "fcall",
                        "name": "inputi",
                        "args": [
                            {
                                "elem_type": "string",
                                "val": "Enter a number: "
                            }
                        ]
                    }
                },
                {
                    "elem_type": "fcall",
                    "name": "print",
                    "args": [
                        {
                            "elem_type": "fcall",
                            "name": "fact",
                            "args": [
                                {
                                    "elem_type": "var",
                                    "name": "n"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "elem_type": "func",
            "name": "fact",
            "args": [
                {
                    "elem_type": "arg",
                    "name": "n",
                    "var_type": "int"
                }
            ],
            "return_type": "int",
            "statements": [
                {
                    "elem_type": "if",
                    "condition": {
                        "elem_type": "<=",
                        "op1": {
                            "elem_type": "var",
                            "name": "n"
                        },
                        "op2": {
                            "elem_type": "int",
                            "val": "1"
                        }
                    },
                    "statements": [
                        {
                            "elem_type": "return",
                            "expression": {
                                "elem_type": "int",
                                "val": "1"
                            }
                        }
                    ],
                    "else_statements": "None"
                },
                {
                    "elem_type": "return",
                    "expression": {
                        "elem_type": "*",
                        "op1": {
                            "elem_type": "var",
                            "name": "n"
                        },
                        "op2": {
                            "elem_type": "fcall",
                            "name": "fact",
                            "args": [
                                {
                                    "elem_type": "-",
                                    "op1": {
                                        "elem_type": "var",
                                        "name": "n"
                                    },
                                    "op2": {
                                        "elem_type": "int",
                                        "val": "1"
                                    }
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ]
}